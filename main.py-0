import os
import logging
from dotenv import load_dotenv
from fastapi import FastAPI, UploadFile, File, HTTPException
from fastapi.middleware.cors import CORSMiddleware
import tempfile

# Загрузка переменных окружения
load_dotenv()

app = FastAPI(title="Voice Assistant API")

# Конфигурация
UVICORN_HOST = os.getenv("UVICORN_HOST", "0.0.0.0")
UVICORN_PORT = int(os.getenv("UVICORN_PORT", "8000"))

# CORS настройки
app.add_middleware(
    CORSMiddleware,
    allow_origins=os.getenv("CORS_ORIGINS", "*").split(","),
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Настройка логирования
logging.basicConfig(
    level=os.getenv("LOG_LEVEL", "INFO"),
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[logging.StreamHandler()]
)

@app.on_event("startup")
async def startup_event():
    """Инициализация при запуске"""
    import whisper
    app.state.whisper_model = whisper.load_model(os.getenv("WHISPER_MODEL", "base"))
    logging.info("Whisper model loaded successfully")

@app.post("/process_audio")
async def process_audio(file: UploadFile = File(...)):
    """Обработка аудиофайла"""
    try:
        with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as tmp:
            content = await file.read()
            tmp.write(content)
            tmp_path = tmp.name
        
        result = app.state.whisper_model.transcribe(tmp_path, language="ru")
        os.unlink(tmp_path)
        
        return {
            "text": result["text"],
            "language": result["language"]
        }
        
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Audio processing error: {str(e)}")

@app.get("/")
async def root():
    return {"status": "running", "version": "1.0.0"}

@app.get("/health")
async def health_check():
    return {"status": "healthy", "whisper_model": os.getenv("WHISPER_MODEL", "base")}

@app.get("/routes")
async def get_routes():
    return [{"path": route.path, "methods": list(route.methods)} for route in app.routes]

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host=UVICORN_HOST, port=UVICORN_PORT)