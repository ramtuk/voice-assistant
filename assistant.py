import time
from utils.speech import listen, say
from commands.base_commands import handle_base_command
from utils.logger import logger, log_command  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç

class VoiceAssistant:
    def __init__(self):
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞...")
        self.setup()
        logger.info("‚úÖ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    def setup(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
        pass

    def handle_command(self, command):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É"""
        if not command:
            return False
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
        result = handle_base_command(command)
        if result:
            log_command(command, result)  # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –æ—Ç–≤–µ—Ç
            return True
        
        return False

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
        logger.info("\n" + "="*50)
        logger.info("üöÄ –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        logger.info("üîä –ì–æ–≤–æ—Ä–∏—Ç–µ —á—ë—Ç–∫–æ –∏ —è—Å–Ω–æ –ø–æ—Å–ª–µ –∑–≤—É–∫–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞")
        logger.info("‚ùå –°–∫–∞–∂–∏—Ç–µ '—Å—Ç–æ–ø' –∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã")
        logger.info("="*50)
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        say("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω. –ì–æ—Ç–æ–≤ –∫ –≤–∞—à–∏–º –∫–æ–º–∞–Ω–¥–∞–º!")
        logger.info("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: –ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –∑–∞–ø—É—â–µ–Ω. –ì–æ—Ç–æ–≤ –∫ –≤–∞—à–∏–º –∫–æ–º–∞–Ω–¥–∞–º!")
        
        while True:
            try:
                command = listen()
                
                if command:
                    result = self.handle_command(command)
                    if result and any(word in command for word in ['—Å—Ç–æ–ø', '–≤—ã—Ö–æ–¥', '–∑–∞–∫—Ä–æ–π—Å—è']):
                        break
                
                time.sleep(0.1)
                
            except KeyboardInterrupt:
                logger.info("\n\nüëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                say("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                logger.info("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
                time.sleep(3)
                continue